#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è self-signed SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è GigaWin backend
"""

import os
import subprocess
import sys

def generate_ssl_certificate():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"""
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    os.makedirs("ssl", exist_ok=True)
    
    # –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    cmd = [
        "python", "-c",
        """
import ssl
from cryptography import x509
from cryptography.x509.oid import NameOID
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.asymmetric import rsa
from cryptography.hazmat.primitives.serialization import Encoding, PrivateFormat, NoEncryption
import datetime

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
private_key = rsa.generate_private_key(
    public_exponent=65537,
    key_size=2048,
)

# –°–æ–∑–¥–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
subject = issuer = x509.Name([
    x509.NameAttribute(NameOID.COUNTRY_NAME, "RU"),
    x509.NameAttribute(NameOID.STATE_OR_PROVINCE_NAME, "Moscow"),
    x509.NameAttribute(NameOID.LOCALITY_NAME, "Moscow"),
    x509.NameAttribute(NameOID.ORGANIZATION_NAME, "GigaWin"),
    x509.NameAttribute(NameOID.COMMON_NAME, "gigawin.unicorns-group.ru"),
])

cert = x509.CertificateBuilder().subject_name(
    subject
).issuer_name(
    issuer
).public_key(
    private_key.public_key()
).serial_number(
    x509.random_serial_number()
).not_valid_before(
    datetime.datetime.utcnow()
).not_valid_after(
    datetime.datetime.utcnow() + datetime.timedelta(days=365)
).add_extension(
    x509.SubjectAlternativeName([
        x509.DNSName("gigawin.unicorns-group.ru"),
        x509.DNSName("localhost"),
        x509.IPAddress("127.0.0.1"),
    ]),
    critical=False,
).sign(private_key, hashes.SHA256())

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
with open("ssl/key.pem", "wb") as f:
    f.write(private_key.private_bytes(
        encoding=Encoding.PEM,
        format=PrivateFormat.PEM,
        encryption_algorithm=NoEncryption()
    ))

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
with open("ssl/cert.pem", "wb") as f:
    f.write(cert.public_bytes(Encoding.PEM))

print("SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        """
    ]
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å cryptography –±–∏–±–ª–∏–æ—Ç–µ–∫—É
        result = subprocess.run(cmd, capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: {result.stderr}")
            return False
            
    except FileNotFoundError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ Python —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π cryptography")
        return False

if __name__ == "__main__":
    if generate_ssl_certificate():
        print("\nüìÇ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã:")
        print("  - ssl/cert.pem (—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç)")
        print("  - ssl/key.pem (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á)")
    else:
        print("\nüîß –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±:")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–Ω–ª–∞–π–Ω –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        print("\n‚ö†Ô∏è –°–æ–∑–¥–∞—é –ø—Ä–æ—Å—Ç—ã–µ SSL —Ñ–∞–π–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        try:
            with open("ssl/cert.pem", "w") as f:
                f.write("# SSL Certificate - —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç\n# –î–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Let's Encrypt –∏–ª–∏ –∫—É–ø–ª–µ–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç\n")
            
            with open("ssl/key.pem", "w") as f:
                f.write("# SSL Private Key - —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á\n# –î–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–ª—é—á–µ–π\n")
                
            print("‚úÖ –ó–∞–≥–ª—É—à–∫–∏ —Å–æ–∑–¥–∞–Ω—ã. –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ï SSL –§–ê–ô–õ–´!")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤: {e}")




